
@{
    ViewBag.Title = "Invites";
}

@using AdminPortal.Models

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row">
        <div class="col-xl-12">
            <div class="nav-align-top nav-tabs-shadow mb-4">
                <ul class="nav nav-tabs " role="tablist">
                    <li class="nav-item">
                        <button type="button" class="nav-link active" role="tab" data-bs-toggle="tab" data-bs-target="#data" aria-controls="navs-justified-home" aria-selected="true"><i class="tf-icons ti ti-database ti-xs me-1"></i> Data </button>
                    </li>
                    <li class="nav-item">
                        <button type="button" class="nav-link click" role="tab" data-bs-toggle="tab" data-bs-target="#form" aria-controls="navs-justified-profile" aria-selected="false"><i class="tf-icons ti ti-keyboard ti-xs me-1"></i> Record</button>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="data" role="tabpanel">
                        <table class="datatables-basic table">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Supplier</th>
                                    <th>VehiSW.</th>
                                    <th>Invite Status</th>
                                    <th>Date Created</th>
                                    <th>Reminded On</th>
                                    <th>Send Reminder</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>

                                <script>
                                    
                                    // To calculate the time difference of two dates
                                    var Difference_In_Time = date2.getTime() - date1.getTime();
                                    var Difference_In_Time2 = date2.getTime() - date3.getTime();

                                    // To calculate the no. of days between two dates
                                    var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);
                                    var Difference_In_Days2 = Difference_In_Time2 / (1000 * 3600 * 24);
                                    tdata += '<tr>';
                                    tdata += '<td>' + i + '</td>';
                                    tdata += '<td>' + value.SupplierName + '</td>';
                                    tdata += '<td>' + value.EcuAppName + '</td>';
                                    tdata += '<td>' + value.InviteStatus + '</td>';
                                    tdata += '<td>' + ToJavaScriptDate(value.DateModified) + '</td>';
                                    let remind = value.RemindedOn == null ? "-" : ToJavaScriptDate(value.RemindedOn);
                                    tdata += '<td>' + remind + '</td>';
                                    let classSwitch = "switch" + value.ID;
                                    let progressSwitch = "progress" + value.ID;
                                    let resultSwitch = "result" + value.ID;
                                    tdata += '<td style="min-width:150px" class="checkRole supervisor analyst">';
                                    //tdata += '<a onclick="javascript:void(0)" data-link="/VehiAssure/Delete?ID=' + value.ID + '" href="#" class="' + classSwitch + ' btn btn-icon confirm btn-danger ml-2"><i class="fa fa-trash" aria-hidden="true" ></i></a>';
                                    //tdata += '<a href="#" class="btn btn-warning btn-progress d-none ' + progressSwitch + '">Progress</a>';
                                    //tdata += '<a href="#" class="btn btn-success ' + resultSwitch + ' d-none">Request Sent</a>';
                                    if (Difference_In_Days > 14 && (Difference_In_Days2 > 14 || value.RemindedOn == null) && value.InviteStatus == "Pending") {
                                        tdata += '<a onclick="javascript:void(0)" data-link="/VehiAssure/SendReminder?ID=' + value.ID + '" href="#" class="btn btn-icon confirm btn-warning ml-2"><i class="fas fa-redo"></i></a>';
                                    }
                                </script>

                                @{
                                    int i = 1;
                                }
                                @foreach (var m in Model)
                                {
                                    <tr>
                                        <td>@i</td>
                                        <td>@m.Supplier.Name</td>
                                        <td>@m.ECUApp.Name</td>
                                        <td>@m.InviteStatus</td>
                                        <td>@m.DateCreated</td>
                                        <td>@m.RemindedOn</td>
                                        @{ 
                                            double daysSinceReminder = 0;
                                            var date1 = m.DateCreated;
                                            var date3 = m.RemindedOn;
                                            var daysSinceInvitation = (DateTime.Now - m.DateCreated).TotalDays;

                                            if (m.RemindedOn != null)
                                            {
                                                daysSinceReminder = (DateTime.Now - m.RemindedOn).TotalDays;
                                            }
                                        }
                                    <td>

                                        @if (m.InviteStatus == "Pending" && (daysSinceInvitation > 14 && daysSinceReminder == 0))
                                        {
                                            <button type="button" onclick="resend(@m.ID)" class="btn btn-warning btn-xs">Resend Invite</button>

                                        }
                                        @*else if (daysSinceReminder > 14 && m.InviteStatus == "Pending")
                                        {
                                            <button type="button" onclick="resend(m.ID)" class="btn btn-warning btn-xs">Resend Invite</button>
                                        }*@

                                    </td>
                                        <td><button onclick="Delete(@m.ID)" style="padding: 5px;" class="btn btn-xs btn-danger ms-2"><i class="fa fa-trash"></i></button></td>
                                    </tr>
                                    i++;
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="tab-pane fade" id="form" role="tabpanel">
                        <!-- Basic Layout & Basic with Icons -->
                        <div class="row" id="app">
                            <!-- Basic Layout -->
                            <div class="col-xxl">
                                <div class="card mb-4">
                                    <div class="card-body">
                                        <form @@submit.prevent="handleSubmit" encytpe="multipart/form-data">
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="SupplierID">Supplier</label>
                                                <div class="col-sm-4">
                                                    <select v-model="vm.SupplierID" id="SupplierID" required="required" class="form-control">
                                                        <option value="">Select Supplier</option>
                                                        <option v-for="option in suppliers" v-bind:value="option.ID">{{option.Name}}</option>
                                                    </select>
                                                </div>
                                                <label class="col-sm-2 col-form-label" for="SupplierID">ECU/APP</label>
                                                <div class="col-sm-4">
                                                    <select v-model="vm.AppID" id="AppID" required="required" class="form-control">
                                                        <option value="">Select ECU/APP</option>
                                                        <option v-for="option in apps" v-bind:value="option.ID">{{option.Name}}</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <div class="col-sm-6">
                                                    <table class="table table-bordered">
                                                        <colgroup>
                                                            <col width="30%" />
                                                            <col width="70%" />
                                                        </colgroup>
                                                        <tr>
                                                            <td>Country of Origin</td>
                                                            <td>{{supplier.Country}}</td>
                                                        </tr>
                                                        <tr>
                                                            <td>Contact Person</td>
                                                            <td>{{supplier.ContactPerson}}</td>
                                                        </tr>
                                                        <tr>
                                                            <td>Contact Details</td>
                                                            <td>{{supplier.ContactDetail}}</td>
                                                        </tr>
                                                        <tr>
                                                            <td>Head Office</td>
                                                            <td>{{supplier.Headoffice}}</td>
                                                        </tr>
                                                    </table>
                                                </div>
                                                <div class="col-sm-6">
                                                    <table class="table table-bordered">
                                                        <colgroup>
                                                            <col width="30%" />
                                                            <col width="70%" />
                                                        </colgroup>
                                                        <tr>
                                                            <td>Category</td>
                                                            <td>{{app.Category.Name}}</td>
                                                        </tr>
                                                        <tr>
                                                            <td>Description</td>
                                                            <td>{{app.Description}}</td>
                                                        </tr>
                                                        <tr>
                                                            <td style="text-align:center" colspan="2">
                                                            <img :src="app.FilePath" style="max-width:150px"  alt="no image found"/>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="row justify-content-end mt-4">
                                                <div class="col-sm-10">
                                                    <button type="submit" class="btn btn-success float-end"><i class="fa fa-plane"></i> &nbsp;Send Invite</button>
                                                    <button type="button" onclick="window.location.reload()" class="btn btn-danger float-end mx-2"><i class="fa fa-cancel"></i> &nbsp;Cancel</button>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script type="text/x-template" id="select2-template">
        <select>
            <slot></slot>
        </select>
    </script>


    <script>

        Vue.component('select2', {
            props: ['options', 'value', 'change'],
            template: '#select2-template',
            mounted: function () {
                var vm = this
                $(this.$el)
                    .val(this.value)
                    // init select2
                    .select2({ data: this.options })
                    // emit event on change.
                    .on('change', function () {
                        vm.$emit('input', this.value)
                    })
            },
            watch: {
                value: function (value) {
                    // update value
                    $(this.$el).val(value)
                },
                options: function (options) {
                    // update options
                    $(this.$el).select2({ data: options })
                }
            },

            destroyed: function () {
                $(this.$el).off().select2('destroy')
            }
        });
    </script>
    <script>
        var dt;
        dt = $('.datatables-basic').DataTable(options);

    </script>
    <script>
          function resend(ID) {
            Swal.fire({
                showCancelButton: false,
                title: 'Are you sure you want to resend this invite?',
                icon: 'info',
                showDenyButton: true,
                confirmButtonText: 'Yes',
                denyButtonText: 'No',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/VehiAssure/SendReminder?ID=' + ID,
                        type: "GET",
                        cache: false,
                        success: function (o) {
                            toastr.success("Invite sent.");
                            setTimeout(function () {
                                window.location.reload()
                            }, 500);
                        },
                        error: function (o) {
                            toastr.error("Something went wrong.");
                        }
                    }
                    );


                } else if (result.isDenied) {

                }
            })
        }
        function Delete(ID) {
            Swal.fire({
                showCancelButton: false,
                title: 'Are you sure you want to delete this record?',
                icon: 'error',
                showDenyButton: true,
                confirmButtonText: 'Yes',
                denyButtonText: 'No',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/delete/invite?id=' + ID,
                        type: "GET",
                        cache: false,
                        success: function (o) {
                            toastr.error("Record has been deleted.");
                            setTimeout(function () {
                                window.location.reload()
                            }, 500);
                        },
                        error: function (o) {
                            toastr.error("Record has not been deleted because dependent data is present.");
                        }
                    }
                    );


                } else if (result.isDenied) {

                }
            })
        }
        function EditPage(ID) {
            $.ajax({

                url: '/get/app?id=' + ID,
                type: "GET",
                cache: false,
                success: function (o) {
                    vueContent.vm = o;
                    //try { vueContent.vm.POST_DTE = o.POST_DTE.split('T')[0]; }
                    //catch {

                    //}

                    setTimeout(function () {
                        $('select').not(".keepDisabled").each(function () {
                            $(this).removeAttr("disabled");
                        })
                        $('input').each(function () {
                            $(this).removeAttr("disabled", "disabled");
                        })

                        if (!$(".frm").hasClass("border-bottom"))
                            $('.click').trigger("click");

                        $('select').trigger("change");
                    }, 500);

                }
            });
        }

        var vueContent = new Vue({
            el: '#app',
            data: {
                vm: {
                    ID: 0,
                    Name: null,
                    SupplierID: '',
                    AppID: '',
                },
                apps: [],
                suppliers: [],
                app: { Category: {}},
                supplier: {},
            },
            watch: {
                'vm.SupplierID': function () {
                    var me = this;
                    axios.get("/get/supplier?id=" + this.vm.SupplierID).then((res) => {
                        me.supplier = res.data;
                    });
                    axios.get("/dropdowns/appsbysupplier?id=" + me.vm.SupplierID).then((res) => {
                        this.apps = res.data;
                    });
                },
                'vm.AppID': function () {
                    var me = this;
                    axios.get("/get/app?id=" + this.vm.AppID).then((res) => {
                        me.app = res.data;
                    });
                }
            },
            methods: {
                handleSubmit() {
                    axios.post('/VehiAssure/Invite', JSON.stringify(this.vm), {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        if (response.data > 0) {
                            toastr.success("Record has been updated.");
                            setTimeout(function () {
                                window.location.reload()
                            }, 500);

                        }
                        else if (response.data == 0) {
                            toastr.success("Record has been updated.");
                            setTimeout(function () {
                                window.location.reload()
                            }, 500);
                        }
                        else {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An Error has occured please contact System Administrator.',
                                icon: 'error',
                                showConfirmButton: false
                            });
                        }
                    }).catch(error => {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An Error has occured please contact System Administrator.',
                            icon: 'error',
                            showConfirmButton: false
                        })
                    })
                },
                addItem() {
                    this.vm.Users.push({ ID: 0, Email: null, Phone: null, Address: null, Name: null, UserName: null });
                },
                remove(index) {
                    if (this.vm.Users.length == 1) {
                        alert("Atleast one item is requried");
                        return false;
                    }
                    let confirm = window.confirm("Are you sure you want to delete this item?");
                    if (confirm) {
                        this.vm.Users.splice(index, 1);
                        toastr.error("User deleted!");
                    }
                },
                LoadDropdowns() {
                    axios.get("/dropdowns/suppliers").then((res) => {
                        this.suppliers = res.data;
                    });
                 
                }
            },
            beforeMount() {
                this.LoadDropdowns()
            },
        });
    </script>
}
