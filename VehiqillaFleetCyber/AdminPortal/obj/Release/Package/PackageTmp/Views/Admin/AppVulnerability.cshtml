

@using AdminPortal.Models

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row">
        <div class="col-xl-12">
            <div class="nav-align-top nav-tabs-shadow mb-4">
                <ul class="nav nav-tabs " role="tablist">
                    <li class="nav-item">
                        <button type="button" class="nav-link active" role="tab" data-bs-toggle="tab" data-bs-target="#data" aria-controls="navs-justified-home" aria-selected="true"><i class="tf-icons ti ti-database ti-xs me-1"></i> Current Vulnerabilities </button>
                    </li>
                    <li class="nav-item">
                        <button type="button" class="nav-link click" role="tab" data-bs-toggle="tab" data-bs-target="#form" aria-controls="navs-justified-profile" aria-selected="false"><i class="tf-icons ti ti-keyboard ti-xs me-1"></i> Add New Vulnerability</button>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="data" role="tabpanel">
                        <table class="datatables-basic table">
                            <thead>
                                <tr>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int i = 1;
                                }
                                @foreach (var m in Model)
                                {
                                    <tr>
                                        <td>
                                            <table class="table table-borderless table-striped">
                                                <tbody>
                                                    <tr><td colspan="2">    Sr # @i <button onclick="EditPage(@m.ID)" style="padding: 5px;" class="btn btn-xs btn-warning"><i class="fa fa-edit"></i></button><button onclick="Delete(@m.ID)" style="padding: 5px;" class="btn btn-xs btn-danger ms-2"><i class="fa fa-trash"></i></button></td></tr>
                                                    <tr><td><b>Vehiqilla Vulnerability Name (VVN):</b></td><td>   @m.Name</td></tr>
                                                    <tr><td><b>VehiSW. Name: </b></td><td> @m.ECUApp.Name</td></tr>
                                                    <tr><td><b>Date:</b></td><td> @m.DateCreated.ToString("dd-MMM-yyyy")</td></tr>
                                                    <tr><td><b> Year: </b></td><td>  @m.DateCreated.ToString("yyyy")</td></tr>
                                                    <tr><td><b>  Description: </b></td><td> @m.Description</td></tr>
                                                    <tr><td><b> Hack Type:</b></td><td>   @m.HackType</td></tr>
                                                    <tr><td><b> Oems Impacted:</b></td><td>  @m.OemImpacted</td></tr>
                                                    <tr><td><b> Physical/Remote access: </b></td><td>    @m.Access</td></tr>
                                                    <tr><td><b> Long / Short range: </b></td><td>  @m.Range</td></tr>
                                                    <tr><td><b> Attack vector: </b></td><td> @m.AttackVector</td></tr>
                                                    <tr><td><b> Attack method:</b></td><td>  @m.AttackMethod</td></tr>
                                                    <tr><td><b> Impact: </b></td><td> @m.Impact</td></tr>
                                                    <tr><td><b>Research name / company: </b></td><td> @m.ResearchName</td></tr>
                                                    <tr><td><b> Reference:</b></td><td> @m.Reference</td></tr>
                                                    <tr><td><b> Link:</b></td><td>@m.Link</td></tr>
                                                </tbody>
                                            </table>
                                        </td>
                                    </tr>

                                    i++;
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="tab-pane fade" id="form" role="tabpanel">
                        <!-- Basic Layout & Basic with Icons -->
                        <div class="row" id="app">
                            <!-- Basic Layout -->
                            <div class="col-xxl">
                                <div class="card mb-4">
                                    <div class="card-body">
                                        <form @@submit.prevent="handleSubmit" encytpe="multipart/form-data">
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="Name">Vehiqilla Vulnerability Name (VVN)</label>
                                                <div class="col-sm-10">
                                                    <input type="text" v-model="vm.Name" class="form-control" id="Name" required maxlength="250" />
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="Name">Description</label>
                                                <div class="col-sm-10">
                                                    <input type="text" v-model="vm.Description" class="form-control" id="Description" required maxlength="250" />
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="HackType">Hack Type</label>
                                                <div class="col-sm-10">
                                                    <select v-model="vm.HackType" id="HackType" required="required" class="form-control">
                                                        <option  value="">Select Hack Type</option>
                                                        <option v-for="option in hacktypes" v-bind:value="option.Name">{{option.Name}}</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="HackType">Access</label>
                                                <div class="col-sm-10">
                                                    <select v-model="vm.Access" id="Access" required="required" class="form-control">
                                                        <option value="">Select Access Type</option>
                                                        <option v-for="option in accesstypes" v-bind:value="option.Name">{{option.Name}}</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="HackType">Range</label>
                                                <div class="col-sm-10">
                                                    <select v-model="vm.Range" id="Range" required="required" class="form-control">
                                                        <option value="">Select Range</option>
                                                        <option v-for="option in rangetypes" v-bind:value="option.Name">{{option.Name}}</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="AttackVector">Attack Vector</label>
                                                <div class="col-sm-10">
                                                    <input type="text" v-model="vm.AttackVector" class="form-control" id="AttackVector" required maxlength="250" />
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="AttackMethod">Attack Method</label>
                                                <div class="col-sm-10">
                                                    <input type="text" v-model="vm.AttackMethod" class="form-control" id="AttackMethod" required maxlength="250" />
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="Impact">Impact</label>
                                                <div class="col-sm-10">
                                                    <input type="text" v-model="vm.Impact" class="form-control" id="Impact" required maxlength="250" />
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="ResearchName">Research Name</label>
                                                <div class="col-sm-10">
                                                    <input type="text" v-model="vm.ResearchName" class="form-control" id="ResearchName" required maxlength="250" />
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="Reference">Reference</label>
                                                <div class="col-sm-10">
                                                    <input type="text" v-model="vm.Reference" class="form-control" id="Reference" required maxlength="250" />
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="OemImpacted">Oem Impacted</label>
                                                <div class="col-sm-10">
                                                    <input type="text" v-model="vm.OemImpacted" class="form-control" id="OemImpacted" required maxlength="250" />
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <label class="col-sm-2 col-form-label" for="Link">Link</label>
                                                <div class="col-sm-10">
                                                    <input type="text" v-model="vm.Link" class="form-control" id="Link" required maxlength="250" />
                                                </div>
                                            </div>
                                            <div class="row justify-content-end mt-4">
                                                <div class="col-sm-10">
                                                    <button type="submit" class="btn btn-success float-end"><i class="fa fa-save"></i> &nbsp;Save</button>
                                                    <button type="button" onclick="window.location.reload()" class="btn btn-danger float-end mx-2"><i class="fa fa-cancel"></i> &nbsp;Cancel</button>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script type="text/x-template" id="select2-template">
        <select>
            <slot></slot>
        </select>
    </script>


    <script>

        Vue.component('select2', {
            props: ['options', 'value', 'change'],
            template: '#select2-template',
            mounted: function () {
                var vm = this
                $(this.$el)
                    .val(this.value)
                    // init select2
                    .select2({ data: this.options })
                    // emit event on change.
                    .on('change', function () {
                        vm.$emit('input', this.value)
                    })
            },
            watch: {
                value: function (value) {
                    // update value
                    $(this.$el).val(value)
                },
                options: function (options) {
                    // update options
                    $(this.$el).select2({ data: options })
                }
            },

            destroyed: function () {
                $(this.$el).off().select2('destroy')
            }
        });
    </script>
    <script>
        var dt;
        dt = $('.datatables-basic').DataTable(options);

    </script>
    <script>
        function Delete(ID) {
            Swal.fire({
                showCancelButton: false,
                title: 'Are you sure you want to delete this record?',
                icon: 'error',
                showDenyButton: true,
                confirmButtonText: 'Yes',
                denyButtonText: 'No',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/delete/vulnerability?id=' + ID,
                        type: "GET",
                        cache: false,
                        success: function (o) {
                            toastr.error("Record has been deleted.");
                            setTimeout(function () {
                                window.location.reload()
                            }, 500);
                        },
                        error: function (o) {
                            toastr.error("Record has not been deleted because dependent data is present.");
                        }
                    }
                    );


                } else if (result.isDenied) {

                }
            })
        }
        function EditPage(ID) {
            $.ajax({

                url: '/get/vulnerability?id=' + ID,
                type: "GET",
                cache: false,
                success: function (o) {
                    vueContent.vm = o;
                    //try { vueContent.vm.POST_DTE = o.POST_DTE.split('T')[0]; }
                    //catch {

                    //}

                    setTimeout(function () {
                        $('select').not(".keepDisabled").each(function () {
                            $(this).removeAttr("disabled");
                        })
                        $('input').each(function () {
                            $(this).removeAttr("disabled", "disabled");
                        })

                        if (!$(".frm").hasClass("border-bottom"))
                            $('.click').trigger("click");

                        $('select').trigger("change");
                    }, 500);

                }
            });
        }

        var vueContent = new Vue({
            el: '#app',
            data: {
                vm: {
                    ID: 0,
                    HackType: '',
                    Access: '',
                    Range: '',
                    EcuApp_ID: @Request.Params["ID"],
                },
                hacktypes: [{ Name: "Black Hat" }, { Name: "White Hat" }],
                accesstypes: [{ Name: "Remote" }, { Name: "Local" }],
                rangetypes: [{ Name: "Long" }, { Name: "Short" }],
            },
            methods: {
                handleSubmit() {
                    axios.post('/save/vulnerability', JSON.stringify(this.vm), {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        if (response.data > 0) {
                            toastr.success("Record has been updated.");
                            setTimeout(function () {
                                window.location.reload()
                            }, 500);

                        }
                        else if (response.data == 0) {
                            toastr.success("Record has been updated.");
                            setTimeout(function () {
                                window.location.reload()
                            }, 500);
                        }
                        else {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An Error has occured please contact System Administrator.',
                                icon: 'error',
                                showConfirmButton: false
                            });
                        }
                    }).catch(error => {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An Error has occured please contact System Administrator.',
                            icon: 'error',
                            showConfirmButton: false
                        })
                    })
                },
                addItem() {
                    this.vm.Users.push({ ID: 0, Email: null, Phone: null, Address: null, Name: null, UserName: null });
                },
                remove(index) {
                    if (this.vm.Users.length == 1) {
                        alert("Atleast one item is requried");
                        return false;
                    }
                    let confirm = window.confirm("Are you sure you want to delete this item?");
                    if (confirm) {
                        this.vm.Users.splice(index, 1);
                        toastr.error("User deleted!");
                    }
                },
              
            },
            beforeMount() {
            },
        });
    </script>
}
